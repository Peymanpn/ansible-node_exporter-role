---
- block:
    - name: Get latest release
      uri:
        url: "https://api.github.com/repos/prometheus/node_exporter/releases/latest"
        method: GET
        return_content: true
        status_code: 200
        body_format: json
      register: _latest_release
      # until: _latest_release.status == 200
      retries: 5
    - name: "Set node_exporter version to {{ _latest_release.json.tag_name[1:] }}"
      set_fact:
        node_exporter_version: "{{ _latest_release.json.tag_name[1:] }}"
  when:
    - node_exporter_version == "latest"
    - node_exporter_binary_local_dir | length == 0
  delegate_to: localhost
  run_once: true
- block:
    - name: Get checksum list from github
      set_fact:
        _checksums: "{{ lookup('url', 'https://github.com/prometheus/node_exporter/releases/download/v' + node_exporter_version + '/sha256sums.txt', wantlist=True) | list }}"
      run_once: true

    - name: "Get checksum for {{ node_exporter_arch }} architecture"
      set_fact:
        node_exporter_checksum: "{{ item.split(' ')[0] }}"
      with_items: "{{ _checksums }}"
      when:
        - "('linux-' + node_exporter_arch + '.tar.gz') in item"
  delegate_to: localhost
  when: node_exporter_binary_local_dir | length == 0


- name: Download node_exporter binary to local folder
  become: false
  get_url:
    url: "https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter_version }}/node_exporter-{{ node_exporter_version }}.linux-{{ node_exporter_arch }}.tar.gz"
    dest: "/tmp/node_exporter-{{ node_exporter_version }}.linux-{{ node_exporter_arch }}.tar.gz"
    checksum: "sha256:{{ node_exporter_checksum }}"
    mode: '0644'
  register: _download_binary
  until: _download_binary is succeeded
  retries: 5
  delay: 2
  delegate_to: localhost
  check_mode: false
- name: Unpack node_exporter binary
  become: false
  unarchive:
    src: "/tmp/node_exporter-{{ node_exporter_version }}.linux-{{ node_exporter_arch }}.tar.gz"
    dest: "/tmp"
    creates: "/tmp/node_exporter-{{ node_exporter_version }}.linux-{{ node_exporter_arch }}/node_exporter"
  delegate_to: localhost
  check_mode: false
- name: Create node_exporter directory
  file:
    path: "{{ _node_exporter_binary_install_dir }}"
    state: directory
    recurse: true
    mode: u+rwX,g+rwX,o=rX
  when: _node_exporter_binary_install_dir | length > 0

- name: Propagate node_exporter binaries
  copy:
    src: "/tmp/node_exporter-{{ node_exporter_version }}.linux-{{ node_exporter_arch }}/node_exporter"
    dest: "{{ _node_exporter_binary_install_dir }}/node_exporter"
    mode: 0755
    owner: root
    group: root
  notify: restart node_exporter
  when: not ansible_check_mode
- name: Copy the node_exporter systemd service file
  template:
    src: node_exporter.service.j2
    dest: /etc/systemd/system/node_exporter.service
    owner: root
    group: root
    mode: 0644
  notify: restart node_exporter
- name: Ensure Node Exporter is enabled on boot
  become: true
  systemd:
    daemon_reload: true
    name: node_exporter
    enabled: true
    state: started
  when:
    - not ansible_check_mode
